{"version":3,"sources":["firebase/firebase-config.ts","helpers/loadNotes.ts","helpers/uploadFile.ts","types/types.ts","actions/notes.ts","hooks/useForm.ts","components/notes/NotesAppBar.tsx","components/notes/NoteScreen.tsx","components/Home/NothingSelected.tsx","actions/ui.ts","actions/auth.ts","components/Home/HomeEntry.tsx","components/Home/HomeEntries.tsx","components/Home/Sidebar.tsx","components/Home/Home.tsx","components/auth/LoginScreen.tsx","components/auth/RegisterScreen.tsx","routes/Auth.tsx","routes/PrivateRoutes.tsx","routes/PublicRoutes.tsx","routes/AppRoutes.tsx","reducers/notesReducers.ts","reducers/uiReduces.ts","store/store.ts","reducers/authReducer.ts","Journal.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","notes","citiesRef","collection","get","forEach","doc","push","id","data","uploadFile","file","formData","FormData","append","fetch","method","body","resp","ok","json","secure_url","console","error","types","startLoadingNotes","dispatch","setNotes","activeNote","note","type","payload","showNewNote","startSaveNote","getState","url","noteToFirebase","response","existCollection","exists","update","then","startUpdateNotes","Swal","fire","title","catch","log","deleteNote","useForm","initialState","useState","values","setValues","e","target","name","value","newValue","NotesAppBar","useSelector","s","active","useDispatch","className","onChange","imageSelected","files","options","text","allowOutsideClick","onBeforeOpen","showLoading","fileURL","close","style","display","onClick","document","getElementById","click","NoteScreen","noteActive","state","handleInputChange","reset","activeID","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","msg","finishLoading","login","displayName","startLoginWithEmailPassword","email","password","signInWithEmailAndPassword","user","message","logout","HomeEntry","date","backgroundSize","backgroundImage","HomeEntries","map","c","Sidebar","signOut","getstate","newNote","Date","getTime","add","docRef","Home","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","err","to","RegisterScreen","password2","isFormValid","trim","length","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","Auth","exact","path","component","PrivateRoutes","props","Component","isAuthenticated","rest","PublicRoutes","AppRoutes","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","inititalState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","n","store","createStore","applyMiddleware","thunk","Journal","ReactDOM","render"],"mappings":"0PAaAA,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAKX,IAAMC,EAAKR,IAASS,YAEdC,EAAoB,IAAIV,IAASW,KAAKC,mBCd/BC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACfC,EAAe,GAGfC,EAAYT,EAAGU,WAAH,WAAkBJ,EAAlB,oBAJG,SAKEG,EAAUE,MALZ,qBAMZC,SAAQ,SAACC,GACdL,EAAMM,KAAN,aACIC,GAAGF,EAAIE,IACJF,EAAIG,YATM,kBAYdR,GAZc,2CAAH,sDCHTS,EAAU,uCAAG,WAAOC,GAAP,qBAAAX,EAAA,6DAChBY,EAAW,IAAIC,UACZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQH,GAEP,oDALK,kBAQCI,MAHN,oDAGsB,CAC/BC,OAAQ,OACRC,KAAML,IAVQ,YAQZM,EARY,QAaTC,GAbS,kCAceD,EAAKE,OAdpB,wBAcNC,EAdM,EAcNA,WAdM,kBAePA,GAfO,yBAiBFH,EAAKE,OAjBH,+EAoBlBE,QAAQC,MAAR,MApBkB,0DAAH,sDCAVC,EACF,eADEA,EAGD,gBAHCA,EAKG,iBALHA,EAMM,oBANNA,EAOO,qBAPPA,EAQQ,sBARRA,EAUI,mBAVJA,EAWI,0BAXJA,EAYE,qBAZFA,EAaK,uBAbLA,EAeI,sBAfJA,EAgBY,0B,iBCUZC,EAAoB,SAAC1B,GAC9B,8CAAO,WAAO2B,GAAP,eAAA1B,EAAA,sEACiBF,EAAUC,GAD3B,OACGE,EADH,OAEHyB,EAASC,EAAS1B,IAFf,2CAAP,uDAMS2B,EAAa,SAACpB,EAASqB,GAAV,MAAyB,CAC/CC,KAAMN,EACNO,QAAQ,aACJvB,MACGqB,KAIEG,EAAc,SAACxB,EAASqB,GAAV,MAAyB,CAChDC,KAAMN,EACNO,QAAQ,aACJvB,MACGqB,KAIEF,EAAW,SAAC1B,GAAD,MAAiB,CACrC6B,KAAMN,EACNO,QAAS9B,IAGAgC,EAAgB,SAACJ,GAC1B,8CAAO,WAAOH,EAAeQ,GAAtB,qBAAAlC,EAAA,6DACKD,EAAQmC,IAAWtC,KAAnBG,IAEH8B,EAAKM,YAAYN,EAAKM,WAErBC,EALH,eAKyBP,IACNrB,GAEhB6B,EAAW5C,EACZU,WADY,WACGJ,EADH,oBAEZO,IAFY,UAELuB,EAAKrB,KAEX8B,EAAkBD,EAASjC,MAZ9B,SAcQkC,EAdR,kBAcyBC,OAdzB,iBAeCF,EACKG,OAAOJ,GACPK,MAAK,WACFf,EAASgB,EAAiBb,EAAKrB,GAAI4B,IACnCO,IAAKC,KAAK,OAAQf,EAAKgB,MAAO,cAEjCC,MAAMxB,QAAQyB,KArBpB,4CAAP,yDA0BSL,EAAmB,SAAClC,EAASqB,GAAV,MAAyB,CACrDC,KAAMN,EACNO,QAAS,CACLvB,KACAqB,KAAK,aACDrB,MACGqB,MAqDFmB,EAAa,SAACxC,GAAD,MAAc,CACpCsB,KAAMN,EACNO,QAASvB,I,QC5IAyC,EAAU,SACnBC,GAUA,MAA4BC,mBAAYD,GAAxC,mBAAOE,EAAP,KAAeC,EAAf,KAiBA,MAAO,CAACD,EAXkB,SACtBE,GAIAD,EAAU,2BACHD,GADE,kBAEJE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAXpB,WAA8B,IAA7BC,EAA4B,uDAAjBR,EACtBG,EAAUK,M,OCgCHC,EA3CK,WAChB,IAAgB9B,EAAS+B,aAAY,SAACC,GAAD,OAAYA,EAAE5D,SAA3C6D,OACFpC,EAAWqC,cAmBjB,OACI,sBAAKC,UAAU,gBAAf,UACI,8CACA,uBACIlC,KAAK,OACL0B,KAAK,OACLhD,GAAG,OACHyD,SAjBc,SAACX,GAGvB,IFyEuB3C,EEzEjBuD,EAAgBZ,EAAEC,OAAOY,MAAM,GACjCD,GACAxC,GFuEmBf,EEvEKuD,EFwEhC,uCAAO,WAAOxC,EAAeQ,GAAtB,mBAAAlC,EAAA,6DACGoE,EAAU,CACZvB,MAAO,eACPwB,KAAM,iBACNC,mBAAmB,EACnBC,aAAc,WACV5B,IAAK6B,gBAGb7B,IAAKC,KAAKwB,GAEMxC,EAAeM,IAAWjC,MAAlC6D,OAXL,SAamBpD,EAAWC,GAb9B,OAaG8D,EAbH,OAeH7C,EAAWO,IAAMsC,EAEjB/C,EAASO,EAAcL,IAEvBe,IAAK+B,QAnBF,2CAAP,2DE3DYC,MAAO,CAAEC,QAAS,UAEtB,gCACI,wBAAQC,QAzBK,WAAO,IAAD,EAC3B,UAAAC,SAASC,eAAe,eAAxB,SAAiCC,SAwBUhB,UAAU,MAA7C,qBAGA,wBAAQa,QA/BG,WACnBnD,EAASO,EAAcJ,KA8BkBmC,UAAU,MAA3C,yBC+BDiB,EAjEI,WACf,IAAMvD,EAAWqC,cAEDmB,EAAetB,aAAY,SAACuB,GAAD,OAAgBA,EAAMlF,SAAzD6D,OAER,EAA2Cb,EAAQiC,GAAnD,mBAAO9B,EAAP,KAAegC,EAAf,KAAkCC,EAAlC,KAEQxC,EAAyBO,EAAzBP,MAAO5B,EAAkBmC,EAAlBnC,KAAMkB,EAAYiB,EAAZjB,IAAK3B,EAAO4C,EAAP5C,GAEpB8E,EAAWC,iBAAOL,EAAW1E,IAEnCgF,qBAAU,WACFF,EAASG,UAAYP,EAAW1E,KAChC6E,EAAMH,GACNI,EAASG,QAAUP,EAAW1E,MAEnC,CAAC0E,EAAYG,IAEhBG,qBAAU,WACN9D,EAASE,EAAWwB,EAAO5C,GAAR,eAAiB4C,OACrC,CAACA,EAAQ1B,IAMZ,OACI,sBAAKsC,UAAU,sBAAf,UACI,cAAC,EAAD,IAEA,sBAAKA,UAAU,iBAAf,UACI,uBACIlC,KAAK,OACL0B,KAAK,QACLhD,GAAG,QACHkF,YAAY,qBACZC,aAAa,MACb3B,UAAU,qBACVP,MAAOZ,EACPoB,SAAUmB,IAEd,0BACI5B,KAAK,OACLhD,GAAG,OACHkF,YAAY,0BACZjC,MAAOxC,EACPgD,SAAUmB,IAGbjD,GACG,qBAAK6B,UAAU,eAAf,SACI,qBAAK4B,IAAKzD,EAAK0D,IAAKhD,SAIhC,wBACIgC,QAlCc,WACtBnD,EHuFqB,SAAClB,GAC1B,8CAAO,WAAOkB,EAAeQ,GAAtB,mBAAAlC,EAAA,6DACKD,EAAQmC,IAAWtC,KAAnBG,IAEFsC,EAAW5C,EAAGU,WAAH,WAAkBJ,EAAlB,oBAAwCO,IAAxC,UAA+CE,IAE1D8B,EAAkBD,EAASjC,MAL9B,SAOQkC,EAPR,kBAOyBC,OAPzB,gBAQCF,EACKyD,SACArD,MAAK,WACFf,EAASsB,EAAWxC,IACpBmC,IAAKC,KACD,SADJ,eAEYpC,EAFZ,uBAGI,YAGPsC,MAAMxB,QAAQyB,KAlBpB,2CAAP,wDGxFagD,CAAcvF,KAkCfwD,UAAU,2BAFd,wBC7CGgC,EAdS,WACpB,OACI,sBAAKhC,UAAU,wBAAf,UACI,iDACA,uBAFJ,sBAMI,mBAAGA,UAAU,+BCRnBiC,EAAW,SAACC,GAAD,MAAkB,CAC/BpE,KAAMN,EACNO,QAASmE,IAUPC,EAAgB,iBAAO,CACzBrE,KAAMN,ICTJ4E,EAAQ,SACVrG,EACAsG,GAFU,MAGR,CACFvE,KAAMN,EACNO,QAAS,CACLhC,MACAsG,iBAIFC,EAA8B,SAACC,EAAeC,GAChD,OAAO,SAAC9E,GACJA,EDRoB,CACxBI,KAAMN,ICQFvC,IACKW,OACA6G,2BAA2BF,EAAOC,GAClC/D,MAAK,YAAe,IAAZiE,EAAW,EAAXA,KACLhF,EAAS0E,EAAK,OAACM,QAAD,IAACA,OAAD,EAACA,EAAM3G,IAAP,OAAY2G,QAAZ,IAAYA,OAAZ,EAAYA,EAAML,cAChC3E,EAASyE,QAEZrD,OAAM,SAACQ,GACJX,IAAKC,KAAK,QAASU,EAAEqD,QAAS,SAC9BjF,EAASyE,UA6CnBS,EAAS,iBAAO,CAClB9E,KAAMN,IChCKqF,EAjC6B,SAAC,GAMtC,IALHrG,EAKE,EALFA,GACAqC,EAIE,EAJFA,MACA5B,EAGE,EAHFA,KACA6F,EAEE,EAFFA,KACA3E,EACE,EADFA,IAEMT,EAAWqC,cAIjB,OACI,sBAAKC,UAAU,sBAAsBa,QAJf,WACtBnD,EAASE,EAAWpB,EAAI,CAAEqC,QAAO5B,OAAM6F,OAAM3E,UAG7C,UACKA,GACG,qBACI6B,UAAU,sBACVW,MAAO,CACHoC,eAAgB,QAChBC,gBAAgB,OAAD,OAAS7E,EAAT,SAI3B,sBAAK6B,UAAU,mBAAf,UACI,mBAAGA,UAAU,oBAAb,SAAkCnB,IAClC,mBAAGmB,UAAU,sBAAb,SAAoC/C,OAExC,qBAAK+C,UAAU,uBAAf,SAAuC8C,QCrBpCG,EAXK,WAChB,IAAQhH,EAAU2D,aAAY,SAACC,GAAD,OAAYA,EAAE5D,SAApCA,MACR,OACI,qBAAK+D,UAAU,gBAAf,SACK/D,EAAMiH,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAA0BA,GAAVA,EAAE3G,UC6BnB4G,EAhCC,WACZ,IAAM1F,EAAWqC,cACTP,EAASI,aAAY,SAACC,GAAD,OAAYA,EAAEjE,QAAnC4D,KAUR,OACI,wBAAOQ,UAAU,gBAAjB,UACI,sBAAKA,UAAU,wBAAf,UACI,qBAAIA,UAAU,OAAd,UACI,mBAAGA,UAAU,gBACb,qCAAQR,QAEZ,wBAAQQ,UAAU,MAAMa,QAff,WACjBnD,EHuDJ,uCAAO,WAAOA,GAAP,SAAA1B,EAAA,sEACGf,IAASW,OAAOyH,UADnB,OAGH3F,EAASkF,KACTlF,EN2E0B,CAC9BI,KAAMN,IMhFC,2CAAP,wDGzCY,uBAIJ,sBAAKqD,QAfS,WAClBnD,ETRJ,uCAAO,WAAOA,EAAe4F,GAAtB,mBAAAtH,EAAA,6DACKD,EAAQuH,IAAW1H,KAAnBG,IAEFwH,EAAU,CACZ1E,MAAO,GACP5B,KAAM,GACN6F,MAAM,IAAIU,MAAOC,WANlB,SASkBhI,EAChBU,WADgB,WACDJ,EADC,oBAEhB2H,IAAIH,GAXN,OASGI,EATH,OAaHjG,EAASE,EAAW+F,EAAOnH,GAAI+G,IAC/B7F,EAASM,EAAY2F,EAAOnH,GAAI+G,IAd7B,2CAAP,0DSsBqCvD,UAAU,kBAAvC,UACI,mBAAGA,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAEJ,cAAC,EAAD,QCjBG4D,GAVF,WACT,IAAQ9D,EAAWF,aAAY,SAACC,GAAD,OAAYA,EAAE5D,SAArC6D,OACR,OACI,sBAAKE,UAAU,qBAAf,UACI,cAAC,EAAD,IACA,+BAAQF,EAA+B,cAAC,EAAD,IAAtB,cAAC,EAAD,UC0Ed+D,GA3EK,WAChB,IAAMnG,EAAWqC,cACT+D,EAAYlE,aAAY,SAACuB,GAAD,OAAgBA,EAAM4C,MAA9CD,QAER,EAA2C7E,EAAwB,CAC/DsD,MAAO,kBACPC,SAAU,aAFd,mBAAOpD,EAAP,KAAegC,EAAf,UAkBA,OACI,qCACI,oBAAIpB,UAAU,cAAd,mBACA,uBAAMgE,SAbO,SAAC1E,GAClBA,EAAE2E,iBACFvG,EAAS4E,EAA4BlD,EAAOmD,MAAOnD,EAAOoD,YAWtD,UACI,uBACI1E,KAAK,OACL4D,YAAY,sBACZlC,KAAK,QACLmC,aAAa,MACb3B,UAAU,cACVC,SAAUmB,EACV3B,MAAOL,EAAOmD,QAElB,uBACIzE,KAAK,WACL4D,YAAY,sBACZlC,KAAK,WACLmC,aAAa,MACb3B,UAAU,cACVC,SAAUmB,EACV3B,MAAOL,EAAOoD,WAElB,wBACI0B,SAAUJ,EACV9D,UAAU,4BACVlC,KAAK,SAHT,mBAQA,sBAAKkC,UAAU,uBAAf,UACI,2DACA,sBAAKA,UAAU,aAAaa,QApCd,WAC1BnD,GLyBG,SAACA,GACJzC,IACKW,OACAuI,gBAAgBxI,GAChB8C,MAAK,YAAe,IAAZiE,EAAW,EAAXA,KACLN,EAAK,OAACM,QAAD,IAACA,OAAD,EAACA,EAAM3G,IAAP,OAAY2G,QAAZ,IAAYA,OAAZ,EAAYA,EAAML,gBAE1BvD,OAAM,SAACsF,GAAD,OAAS9G,QAAQyB,IAAIqF,UKGpB,UACI,qBAAKpE,UAAU,sBAAf,SACI,qBACI4B,IAAI,8HACJC,IAAI,cACJ7B,UAAU,kBAGlB,mBAAGA,UAAU,WAAb,SACI,4DAIZ,cAAC,IAAD,CAAMA,UAAU,OAAOqE,GAAG,iBAA1B,uC,SCwCDC,GA7GQ,WACnB,IAAM5G,EAAWqC,cACTmC,EAAQtC,aAAY,SAACuB,GAAD,OAAgBA,EAAM4C,MAA1C7B,IAER,EAAoCjD,EAAQ,CACxCO,KAAM,QACN+C,MAAO,kBACPC,SAAU,WACV+B,UAAW,aAJf,mBAAOnF,EAAP,KAAegC,EAAf,KAMQ5B,EAAqCJ,EAArCI,KAAM+C,EAA+BnD,EAA/BmD,MAAOC,EAAwBpD,EAAxBoD,SAAU+B,EAAcnF,EAAdmF,UAazBC,EAAc,WAChB,IAAInG,GAAW,EA2Bf,OAzB2B,IAAvBmB,EAAKiF,OAAOC,QACZrG,GAAW,EACXX,EAASuE,EAAS,gCACV0C,aAAQpC,GAMW,IAA3BC,EAASiC,OAAOC,QACY,IAA5BH,EAAUE,OAAOC,QAEjBrG,GAAW,EACXX,EAASuE,EAAS,qCACXO,IAAa+B,GAAa/B,EAASkC,OAAS,KACnDrG,GAAW,EACXX,EACIuE,EACI,+EAdR5D,GAAW,EACXX,EACIuE,EAAS,sDAiBjBvE,EPlDmB,CACvBI,KAAMN,IOmDKa,GAEX,OACI,qCACI,oBAAI2B,UAAU,cAAd,sBACA,uBAAMgE,SA5CO,SAAC1E,GAClBA,EAAE2E,iBACF3G,QAAQyB,IAAI,iBAERyF,MACAlH,QAAQyB,IAAI,iBAEZrB,ENM+B,SACvC8B,EACA+C,EACAC,GAEA,OAAO,SAAC9E,GACJzC,IACKW,OACAgJ,+BAA+BrC,EAAOC,GACtC/D,KAHL,uCAGU,6BAAAzC,EAAA,6DAAS0G,EAAT,EAASA,KAAT,gBACIA,QADJ,IACIA,OADJ,EACIA,EAAMmC,cAAc,CACtBxC,YAAa7C,IAFf,OAIF4C,EAAK,OAACM,QAAD,IAACA,OAAD,EAACA,EAAM3G,IAAP,OAAY2G,QAAZ,IAAYA,OAAZ,EAAYA,EAAML,aACvB/E,QAAQyB,IAAI2D,GALV,2CAHV,uDAUK5D,OAAM,SAACsF,GAAD,OAASzF,IAAKC,KAAK,QAASwF,EAAIzB,QAAS,aMtBvCmC,CAAmCtF,EAAM+C,EAAOC,MAqCzD,UACKN,GAAO,qBAAKlC,UAAU,oBAAf,SAAoCkC,IAC5C,uBACIpE,KAAK,OACL4D,YAAY,OACZlC,KAAK,OACLmC,aAAa,MACb3B,UAAU,cACVP,MAAOD,EACPS,SAAUmB,IAEd,uBACItD,KAAK,OACL4D,YAAY,WACZlC,KAAK,QACLmC,aAAa,MACb3B,UAAU,cACVP,MAAO8C,EACPtC,SAAUmB,IAEd,uBACItD,KAAK,WACL4D,YAAY,WACZlC,KAAK,WACLmC,aAAa,MACb3B,UAAU,cACVP,MAAO+C,EACPvC,SAAUmB,IAEd,uBACItD,KAAK,WACL4D,YAAY,UACZlC,KAAK,YACLmC,aAAa,MACb3B,UAAU,cACVP,MAAO8E,EACPtE,SAAUmB,IAEd,wBACIpB,UAAU,iCACVlC,KAAK,SAFT,sBAOA,cAAC,IAAD,CAAMkC,UAAU,OAAOqE,GAAG,cAA1B,wCC1FDU,GAdF,WACT,OACI,qBAAK/E,UAAU,aAAf,SACI,qBAAKA,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgF,OAAK,EAACC,KAAK,cAAcC,UAAWrB,KAC3C,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,iBAAiBC,UAAWZ,KAC9C,cAAC,IAAD,CAAUD,GAAG,wB,SCOlBc,GAZO,SAACC,GACnB,IAAmBC,EAAwCD,EAAnDF,UAAsBI,EAA6BF,EAA7BE,gBAAoBC,EAAlD,aAA2DH,EAA3D,iCACA,OACI,cAAC,IAAD,2BACQG,GADR,IAEIL,UAAW,SAACE,GAAD,OACPE,EAAkB,cAACD,EAAD,eAAeD,IAAY,cAAC,IAAD,CAAUf,GAAG,qBCM3DmB,GAZM,SAACJ,GAClB,IAAmBC,EAAwCD,EAAnDF,UAAsBI,EAA6BF,EAA7BE,gBAAoBC,EAAlD,aAA2DH,EAA3D,iCACA,OACI,cAAC,IAAD,2BACQG,GADR,IAEIL,UAAW,SAACE,GAAD,OACNE,EAA6C,cAAC,IAAD,CAAUjB,GAAG,UAAxC,cAACgB,EAAD,eAAeD,SC6CnCK,GA9CG,WACd,MAAgCtG,oBAAS,GAAzC,mBAAOuG,EAAP,KAAiBC,EAAjB,KACA,EAAoCxG,oBAAS,GAA7C,mBAAOyG,EAAP,KAAmBC,EAAnB,KAEMnI,EAAWqC,cAiBjB,OAfAyB,qBAAU,WACNvG,IAASW,OAAOkK,mBAAhB,uCAAmC,WAAOpD,GAAP,SAAA1G,EAAA,uDAC/B,OAAI0G,QAAJ,IAAIA,OAAJ,EAAIA,EAAM3G,MACN2B,EAAS0E,EAAK,OAACM,QAAD,IAACA,OAAD,EAACA,EAAM3G,IAAP,OAAY2G,QAAZ,IAAYA,OAAZ,EAAYA,EAAML,cAGhC3E,EAASD,EAAkBiF,EAAK3G,MAEhC8J,GAAc,IACXA,GAAc,GAErBF,GAAY,GAVmB,2CAAnC,yDAYD,CAACjI,IAEAgI,EAAiB,wCAGjB,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CACIJ,gBAAiBM,EACjBX,KAAK,QACLC,UAAWH,KAGf,cAAC,GAAD,CACIO,gBAAiBM,EACjBV,UAAWtB,GACXoB,OAAK,IAGT,cAAC,IAAD,CAAUX,GAAG,wB,2BCjD3B0B,GAAgB,CAClB9J,MAAO,GACP6D,OAAQ,MCFNZ,GAAe,CACjB4E,SAAS,EACT5B,IAAK,MCWH8D,GAAmBC,OAAOC,sCAAwCC,KAElEC,GAAWC,aAAgB,CAC7BzK,KChBuB,WAAqD,IAApDuF,EAAmD,uDAA3C,GAAImF,EAAuC,uCAC3E,OAAQA,EAAOxI,MACX,KAAKN,EACD,MAAO,CACHzB,IAAKuK,EAAOvI,QAAQhC,IACpByD,KAAM8G,EAAOvI,QAAQsE,aAE7B,KAAK7E,EACD,MAAO,GACX,QACI,OAAO2D,IDOf4C,GDbqB,WAGnB,IAFF5C,EAEC,uDAFOjC,GACRoH,EACC,uCACD,OAAQA,EAAOxI,MACX,KAAKN,EACD,OAAO,2BACA2D,GADP,IAEIe,IAAKoE,EAAOvI,UAEpB,KAAKP,EACD,OAAO,2BACA2D,GADP,IAEI2C,SAAS,IAEjB,KAAKtG,EACD,OAAO,2BACA2D,GADP,IAEI2C,SAAS,IAGjB,QACI,OAAO3C,ICRflF,MFdwB,WAGtB,IAFFkF,EAEC,uDAFO4E,GACRO,EACC,uCACD,OAAQA,EAAOxI,MACX,KAAKN,EACD,OAAO,2BACA2D,GADP,IAEIrB,OAAO,eACAwG,EAAOvI,WAGtB,KAAKP,EACD,OAAO,2BACA2D,GADP,IAEIlF,MAAM,aAAKqK,EAAOvI,WAE1B,KAAKP,EACD,OAAO,2BACA2D,GADP,IAEIlF,MAAOkF,EAAMlF,MAAMiH,KAAI,SAACrF,GACpB,OAAOA,EAAKrB,KAAO8J,EAAOvI,QAAQvB,GAC5B8J,EAAOvI,QAAQF,KACfA,OAGlB,KAAKL,EACD,OAAO,2BACA2D,GADP,IAEIrB,OAAQ,KACR7D,MAAOkF,EAAMlF,MAAMsK,QAAO,SAACC,GAAD,OAAYA,EAAEhK,KAAO8J,EAAOvI,aAE9D,KAAKP,EACD,OAAO,2BACA2D,GADP,IAEIrB,OAAQ,KACR7D,MAAO,KAEf,KAAKuB,EACD,OAAO,2BACA2D,GADP,IAEIlF,MAAM,CAAEqK,EAAOvI,SAAV,oBAAsBoD,EAAMlF,UAEzC,QACI,OAAOkF,ME3BNsF,GAAQC,aACjBN,GACAJ,GAAiBW,aAAgBC,QEVtBC,GAVW,WACtB,OACI,mCACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,S,MCJhBK,IAASC,OAAO,cAAC,GAAD,IAAajG,SAASC,eAAe,W","file":"static/js/main.fc424b0b.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyALvGppJZZT5NUz_pP-2jPrI1gNLI7gfcs\",\r\n    authDomain: \"journal-app-d1430.firebaseapp.com\",\r\n    projectId: \"journal-app-d1430\",\r\n    storageBucket: \"journal-app-d1430.appspot.com\",\r\n    messagingSenderId: \"789013359642\",\r\n    appId: \"1:789013359642:web:51a8d584ecce0f2c3fb5a3\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst googleAuthProvider =new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","import { db } from \"../firebase/firebase-config\";\r\n\r\n\r\nexport const loadNotes = async (uid: any) => {\r\n    const notes: any[] = [];\r\n\r\n\r\n    const citiesRef = db.collection(` ${uid}/journal/notes `)\r\n    const snapshot = await citiesRef.get();\r\n    snapshot.forEach((doc) => {\r\n        notes.push({\r\n            id:doc.id,\r\n            ...doc.data()\r\n        })\r\n    });\r\n    return notes;\r\n};\r\n","export const uploadFile = async (file: any) => {\r\n    const formData = new FormData();\r\n    formData.append(\"upload_preset\", \"react-journal\");\r\n    formData.append(\"file\", file);\r\n\r\n    const cloudURL = \" https://api.cloudinary.com/v1_1/dwa0boye6/upload\";\r\n\r\n    try {\r\n        const resp = await fetch(cloudURL, {\r\n            method: \"POST\",\r\n            body: formData,\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const { secure_url } = await resp.json();\r\n            return secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n};\r\n","export const types = {\r\n    login: \"[AUTH] Login\",\r\n    register: \"[AUTH] Register\",\r\n    logout: \"[AUTH] Logout\",\r\n\r\n    uiSetError: \"[UI] Set Error\",\r\n    uiRemoveError: \"[UI] Remove Error\",\r\n    uiStartLoading: \"[UI] Start Loading\",\r\n    uiFinishLoading: \"[UI] Finish Loading\",\r\n\r\n    notesAddNew: \"[Notes] New Note\",\r\n    notesActive: \"[Notes] Set active Note\",\r\n    notesLoad: \"[Notes] Load notes\",\r\n    notesUpdated: \"[Notes] Update Notes\",\r\n    notesFileUrl: \"[Notes] Update image URL\",\r\n    notesDelete: \"[Notes] Delete Note\",\r\n    notesLogoutCleaning: \"[Notes] Logout Cleaning\",\r\n};\r\n","import { db } from \"../firebase/firebase-config\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { uploadFile } from \"../helpers/uploadFile\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const addNewNote = () => {\r\n    return async (dispatch: any, getstate: any) => {\r\n        const { uid } = getstate().auth;\r\n\r\n        const newNote = {\r\n            title: \"\",\r\n            body: \"\",\r\n            date: new Date().getTime(),\r\n        };\r\n\r\n        const docRef = await db\r\n            .collection(` ${uid}/journal/notes `)\r\n            .add(newNote);\r\n\r\n        dispatch(activeNote(docRef.id, newNote));\r\n        dispatch(showNewNote(docRef.id, newNote));\r\n\r\n    };\r\n};\r\n\r\nexport const startLoadingNotes = (uid: any) => {\r\n    return async (dispatch: any) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    };\r\n};\r\n\r\nexport const activeNote = (id: any, note: any) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    },\r\n});\r\n\r\nexport const showNewNote = (id: any, note: any) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note,\r\n    },\r\n});\r\n\r\nexport const setNotes = (notes: any) => ({\r\n    type: types.notesLoad,\r\n    payload: notes,\r\n});\r\n\r\nexport const startSaveNote = (note: any) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) delete note.url;\r\n\r\n        const noteToFirebase = { ...note };\r\n        delete noteToFirebase.id;\r\n\r\n        const response = db\r\n            .collection(` ${uid}/journal/notes `)\r\n            .doc(`${note.id}`);\r\n\r\n        const existCollection = response.get();\r\n\r\n        if ((await existCollection).exists) {\r\n            response\r\n                .update(noteToFirebase)\r\n                .then(() => {\r\n                    dispatch(startUpdateNotes(note.id, noteToFirebase));\r\n                    Swal.fire(\"Save\", note.title, \"success\");\r\n                })\r\n                .catch(console.log);\r\n        }\r\n    };\r\n};\r\n\r\nexport const startUpdateNotes = (id: any, note: any) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note,\r\n        },\r\n    },\r\n});\r\n\r\nexport const startUploading = (file: any) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const options = {\r\n            title: \"Uploading...\",\r\n            text: \"Please wait...\",\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            },\r\n        };\r\n        Swal.fire(options);\r\n\r\n        const { active: activeNote } = getState().notes;\r\n\r\n        const fileURL = await uploadFile(file);\r\n\r\n        activeNote.url = fileURL;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n    };\r\n};\r\n\r\nexport const startDeleting = (id: any) => {\r\n    return async (dispatch: any, getState: any) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const response = db.collection(` ${uid}/journal/notes `).doc(`${id}`);\r\n\r\n        const existCollection = response.get();\r\n\r\n        if ((await existCollection).exists) {\r\n            response\r\n                .delete()\r\n                .then(() => {\r\n                    dispatch(deleteNote(id));\r\n                    Swal.fire(\r\n                        \"Delete\",\r\n                        `Note ${id} delete succesfully`,\r\n                        \"error\"\r\n                    );\r\n                })\r\n                .catch(console.log);\r\n        }\r\n    };\r\n};\r\n\r\nexport const deleteNote = (id: any) => ({\r\n    type: types.notesDelete,\r\n    payload: id,\r\n});\r\n\r\nexport const notesDelete = () => ({\r\n    type: types.notesLogoutCleaning,\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = <T>(\r\n    initialState: T\r\n): [\r\n    T,\r\n    (\r\n        e:\r\n            | React.ChangeEvent<HTMLInputElement>\r\n            | React.ChangeEvent<HTMLTextAreaElement>\r\n    ) => void,\r\n    (newValue: any) => void\r\n] => {\r\n    const [values, setValues] = useState<T>(initialState);\r\n\r\n    const reset = (newValue = initialState) => {\r\n        setValues(newValue);\r\n    };\r\n\r\n    const handleInputChange = (\r\n        e:\r\n            | React.ChangeEvent<HTMLInputElement>\r\n            | React.ChangeEvent<HTMLTextAreaElement>\r\n    ) => {\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startSaveNote, startUploading } from \"../../actions/notes\";\r\n\r\n\r\nconst NotesAppBar = () => {\r\n    const { active: note } = useSelector((s: any) => s.notes);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSaveNote = () => {\r\n        dispatch(startSaveNote(note));\r\n    };\r\n    const handleImageClick = () => {\r\n        document.getElementById(\"file\")?.click();\r\n    };\r\n\r\n    const handleImagechange = (e: any) => {\r\n\r\n\r\n        const imageSelected = e.target.files[0];\r\n        if (imageSelected){\r\n            dispatch(startUploading(imageSelected))\r\n        }\r\n        // https://api.cloudinary.com/v1_1/dwa0boye6/upload\r\n        // react-journal\r\n    };\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28-08-2121</span>\r\n            <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                id=\"file\"\r\n                onChange={handleImagechange}\r\n                style={{ display: \"none\" }}\r\n            />\r\n            <div>\r\n                <button onClick={handleImageClick} className=\"btn\">\r\n                    Picture\r\n                </button>\r\n                <button onClick={handleSaveNote} className=\"btn\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotesAppBar;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { activeNote, startDeleting } from \"../../actions/notes\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport NotesAppBar from \"./NotesAppBar\";\r\n\r\nconst NoteScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: noteActive } = useSelector((state: any) => state.notes);\r\n\r\n    const [values, handleInputChange, reset] = useForm(noteActive);\r\n\r\n    const { title, body, url, id } = values;\r\n\r\n    const activeID = useRef(noteActive.id);\r\n\r\n    useEffect(() => {\r\n        if (activeID.current !== noteActive.id) {\r\n            reset(noteActive);\r\n            activeID.current = noteActive.id;\r\n        }\r\n    }, [noteActive, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(values.id, { ...values }));\r\n    }, [values, dispatch]);\r\n\r\n    const handleDeleteClick = () => {\r\n        dispatch(startDeleting(id));\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                    placeholder=\"Some awesome title\"\r\n                    autoComplete=\"off\"\r\n                    className=\"notes__title-input\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <textarea\r\n                    name=\"body\"\r\n                    id=\"body\"\r\n                    placeholder=\"What happended today ? \"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                {url && (\r\n                    <div className=\"notes__image\">\r\n                        <img src={url} alt={title} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <button\r\n                onClick={handleDeleteClick}\r\n                className=\"btn btn-block btn-danger\"\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoteScreen;\r\n","import React from 'react'\r\n\r\nconst NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>Select something</p>\r\n            <br/>\r\n\r\n            pr create an entry!\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        \r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default NothingSelected\r\n","import { types } from \"../types/types\";\r\n\r\nconst setError = (msg: string) => ({\r\n    type: types.uiSetError,\r\n    payload: msg,\r\n});\r\n\r\nconst removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nconst startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\nconst finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n});\r\n\r\nexport { setError, removeError, startLoading, finishLoading };\r\n","import { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nimport Swal from \"sweetalert2\";\r\nimport { notesDelete } from \"./notes\";\r\n\r\nconst login = (\r\n    uid: string | undefined,\r\n    displayName: string | null | undefined\r\n) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName,\r\n    },\r\n});\r\n\r\nconst startLoginWithEmailPassword = (email: string, password: string) => {\r\n    return (dispatch: any) => {\r\n        dispatch(startLoading());\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user?.uid, user?.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch((e) => {\r\n                Swal.fire(\"Error\", e.message, \"error\");\r\n                dispatch(finishLoading());\r\n            });\r\n    };\r\n};\r\nconst startRegisterWithEmailPasswordName = (\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n) => {\r\n    return (dispatch: any) => {\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then(async ({ user }) => {\r\n                await user?.updateProfile({\r\n                    displayName: name,\r\n                });\r\n                login(user?.uid, user?.displayName);\r\n                console.log(user);\r\n            })\r\n            .catch((err) => Swal.fire(\"Error\", err.message, \"error\"));\r\n    };\r\n};\r\n\r\nconst startGoogleLogin = () => {\r\n    return (dispatch: any) => {\r\n        firebase\r\n            .auth()\r\n            .signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => {\r\n                login(user?.uid, user?.displayName);\r\n            })\r\n            .catch((err) => console.log(err));\r\n    };\r\n};\r\n\r\nconst startLogout = () => {\r\n    return async (dispatch: any) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(notesDelete());\r\n    };\r\n};\r\n\r\nconst logout = () => ({\r\n    type: types.logout,\r\n});\r\n\r\nexport {\r\n    login,\r\n    startGoogleLogin,\r\n    startRegisterWithEmailPasswordName,\r\n    startLoginWithEmailPassword,\r\n    startLogout,\r\n    logout,\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activeNote } from \"../../actions/notes\";\r\ntype HomeEntryProps = {\r\n    id: number;\r\n    title: string;\r\n    body: string;\r\n    date: string;\r\n    url: string;\r\n};\r\nconst HomeEntry: React.FC<HomeEntryProps> = ({\r\n    id,\r\n    title,\r\n    body,\r\n    date,\r\n    url,\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    const handleClickActive = () => {\r\n        dispatch(activeNote(id, { title, body, date, url }));\r\n    };\r\n    return (\r\n        <div className=\"home__entry pointer\" onClick={handleClickActive}>\r\n            {url && (\r\n                <div\r\n                    className=\"home__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: \"cover\",\r\n                        backgroundImage: `url(${url}) `,\r\n                    }}\r\n                ></div>\r\n            )}\r\n            <div className=\"home__entry-body\">\r\n                <p className=\"home__entry-title\">{title}</p>\r\n                <p className=\"home__entry-content\">{body}</p>\r\n            </div>\r\n            <div className=\"home__entry-date-box\">{date}</div>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeEntry;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport HomeEntry from \"./HomeEntry\";\r\n\r\nconst HomeEntries = () => {\r\n    const { notes } = useSelector((s: any) => s.notes);\r\n    return (\r\n        <div className=\"home__entries\">\r\n            {notes.map((c: any) => (\r\n                <HomeEntry key={c.id} {...c} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeEntries;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { addNewNote } from \"../../actions/notes\";\r\nimport HomeEntries from \"./HomeEntries\";\r\n\r\nconst Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector((s: any) => s.auth);\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    const handleNewNote = () => {\r\n        dispatch(addNewNote());\r\n    };\r\n\r\n    return (\r\n        <aside className=\"home__sidebar\">\r\n            <div className=\"home__siderbar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n                <button className=\"btn\" onClick={handleSubmit}>\r\n                    logout\r\n                </button>\r\n            </div>\r\n            <div onClick={handleNewNote} className=\"home__new-entry\">\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n            <HomeEntries />\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport NoteScreen from \"../notes/NoteScreen\";\r\nimport NothingSelected from \"./NothingSelected\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst Home = () => {\r\n    const { active } = useSelector((s: any) => s.notes);\r\n    return (\r\n        <div className=\"home__main-content\">\r\n            <Sidebar />\r\n            <main>{!active ? <NothingSelected /> : <NoteScreen />}</main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n    startLoginWithEmailPassword,\r\n    startGoogleLogin,\r\n} from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { loginInterface } from \"../../models/login\";\r\n\r\nconst LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector((state: any) => state.ui);\r\n\r\n    const [values, handleInputChange, reset] = useForm<loginInterface>({\r\n        email: \"admin@gmail.com\",\r\n        password: \"password\",\r\n        // email: \"\",\r\n        // password: \"\",\r\n    });\r\n  \r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginWithEmailPassword(values.email, values.password));\r\n        // reset(null);\r\n    };\r\n\r\n    const handleLoginWithGoogle = () => {\r\n        dispatch(startGoogleLogin());\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"enter your username\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={values.email}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"enter your password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={values.password}\r\n                />\r\n                <button\r\n                    disabled={loading}\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-network\">\r\n                    <p>Login with social networks</p>\r\n                    <div className=\"google-btn\" onClick={handleLoginWithGoogle}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img\r\n                                src=\"https://img2.freepng.es/20180610/jeu/kisspng-google-logo-google-search-google-now-5b1dacc1ad0462.3234288415286714257087.jpg\"\r\n                                alt=\"Logo Google\"\r\n                                className=\"google-icon\"\r\n                            />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with Google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link className=\"link\" to=\"/auth/register\">\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { removeError, setError } from \"../../actions/ui\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport isEmail from \"validator/es/lib/isEmail\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\r\n\r\nconst RegisterScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { msg } = useSelector((state: any) => state.ui);\r\n\r\n    const [values, handleInputChange] = useForm({\r\n        name: \"edwin\",\r\n        email: \"admin@gmail.com\",\r\n        password: \"password\",\r\n        password2: \"password\",\r\n    });\r\n    const { name, email, password, password2 } = values;\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        console.log('handle submit');\r\n\r\n        if (isFormValid()){\r\n            console.log('register user');\r\n            \r\n            dispatch(startRegisterWithEmailPasswordName(name, email, password));\r\n        }\r\n    };\r\n\r\n    const isFormValid = (): boolean => {\r\n        let response = true;\r\n\r\n        if (name.trim().length === 0) {\r\n            response = false;\r\n            dispatch(setError(\"The field name is required\"));\r\n        } else if (!isEmail(email)) {\r\n            response = false;\r\n            dispatch(\r\n                setError(\"The field email is required, Email is not valid!\")\r\n            );\r\n        } else if (\r\n            password.trim().length === 0 ||\r\n            password2.trim().length === 0\r\n        ) {\r\n            response = false;\r\n            dispatch(setError(\"The field password is required\"));\r\n        } else if (password !== password2 || password.length < 5) {\r\n            response = false;\r\n            dispatch(\r\n                setError(\r\n                    \"The field password should be at least 6 characters  and match each other\"\r\n                )\r\n            );\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return response;\r\n    };\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form onSubmit={handleSubmit}>\r\n                {msg && <div className=\"auth__alert-error\">{msg}</div>}\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm\"\r\n                    name=\"password2\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    type=\"submit\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link className=\"link\" to=\"/auth/login\">\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport LoginScreen from \"../components/auth/LoginScreen\";\r\nimport RegisterScreen from \"../components/auth/RegisterScreen\";\r\n\r\nconst Auth = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                    <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\r\n\r\ninterface PrivateRouteProps extends RouteProps {\r\n    component: any;\r\n    isAuthenticated: boolean;\r\n}\r\nconst PrivateRoutes = (props: PrivateRouteProps) => {\r\n    const { component: Component, isAuthenticated, ...rest } = props;\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props:any) =>\r\n                isAuthenticated ? <Component {...props} /> : <Redirect to=\"/auth/login\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoutes;\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\r\n\r\ninterface PublicRouteProps extends RouteProps {\r\n    component: any;\r\n    isAuthenticated: boolean;\r\n}\r\nconst PublicRoutes = (props: PublicRouteProps) => {\r\n    const { component: Component, isAuthenticated, ...rest } = props;\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props:any) =>\r\n                !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/home\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PublicRoutes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect, Switch } from \"react-router\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Home from \"../components/Home/Home\";\r\nimport Auth from \"./Auth\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport PrivateRoutes from \"./PrivateRoutes\";\r\nimport PublicRoutes from \"./PublicRoutes\";\r\nimport {  startLoadingNotes } from \"../actions/notes\";\r\n\r\nconst AppRoutes = () => {\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n                dispatch(login(user?.uid, user?.displayName));\r\n\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n                setIsLoggedIn(true);\r\n            } else setIsLoggedIn(false);\r\n\r\n            setChecking(false);\r\n        });\r\n    }, [dispatch]);\r\n\r\n    if (checking) return <h3>Espere</h3>;\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoutes\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/auth\"\r\n                        component={Auth}\r\n                    />\r\n\r\n                    <PrivateRoutes\r\n                        isAuthenticated={isLoggedIn}\r\n                        component={Home}\r\n                        exact\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import { types } from \"../types/types\";\r\n\r\nconst inititalState = {\r\n    notes: [],\r\n    active: null,\r\n};\r\nexport const notesReducer = (\r\n    state = inititalState,\r\n    action: { type: {}; payload: any }\r\n) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload,\r\n                },\r\n            };\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload],\r\n            };\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map((note: any) => {\r\n                    return note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note;\r\n                }),\r\n            };\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter((n: any) => n.id !== action.payload),\r\n            };\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: [],\r\n            };\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msg: null,\r\n};\r\nexport const uiReducer = (\r\n    state = initialState,\r\n    action: { type: {}; payload: any }\r\n) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msg: action.payload,\r\n            };\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducers\";\r\nimport { uiReducer } from \"../reducers/uiReduces\";\r\n\r\n// const composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes:notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action: { type: {}; payload: any }) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            };\r\n        case types.logout:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { ReactElement } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport AppRoutes from \"./routes/AppRoutes\";\r\nimport { store } from \"./store/store\";\r\n\r\nconst Journal: React.FC = (): ReactElement => {\r\n    return (\r\n        <>\r\n            <Provider store={store}>\r\n                <AppRoutes />\r\n            </Provider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Journal;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Journal from \"./Journal\";\nimport \"./styles/style.scss\";\n\nReactDOM.render(<Journal />, document.getElementById(\"root\"));\n"],"sourceRoot":""}